{"version":3,"sources":["components/clients/user.js","components/clients/update.js","components/clients.js","components/actions/inputClient.js","components/actions/inputUpdate.js","components/actions/inputAdd.js","components/actions.js","components/badges/newClients.js","components/badges/emailsSent.js","components/badges/outstandingClients.js","components/badges/hottestCountry.js","components/analytics.js","App.js","serviceWorker.js","index.js"],"names":["User","sold","_this","props","u","react_default","a","createElement","emailType","togglePopup","closePopUp","name","this","split","firstDate","Date","firstContact","toLocaleDateString","className","onClick","country","owner","Component","Update","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateUser","event","setState","target","value","updateSurname","surname","updateCountry","closeButton","update","state","id","user","_id","type","onChange","Clients","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","clients","wrap","_context","prev","next","axios","get","sent","users","data","stop","updateText","text","updateOption","textOption","showPopup","map","_this2","placeholder","clients_update","toLowerCase","includes","clients_user","key","InputClient","client","list","InputUpdate","setOwner","updateEmailText","textEmail","transferLink","sendLink","declareLink","InputAdd","updateNameText","textName","updateSurnameText","textSurname","updateCountryText","textCountry","updateOwnerText","textOwner","inputAdd","Actions","findClient","find","actions","setClients","copiedArray","wanted","post","then","wantedEmail","wantedClientsSold","_ref2","_callee2","inputs","addClient","_context2","_x","apply","arguments","inputClient","inputUpdate","library","add","faChartLine","NewClients","filter","getMonth","getFullYear","length","react_fontawesome_index_es","icon","size","color","style","backgroundColor","padding","borderRadius","toLocaleString","month","faEnvelope","EmailsSent","faUserCircle","OutstandingClients","faGlobeAmericas","HottestCountry","countries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","i","err","return","hottestCountry","sales","keys","_i","Analytics","analytics","newClients","emailsSent","outstandingClients","App","BrowserRouter","Link","to","Route","path","exact","render","components_clients","components_actions","components_analytics","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gaAiDeA,0NA3CXC,KAAO,WACH,OAAIC,EAAKC,MAAMC,EAAEH,KACLI,EAAAC,EAAAC,cAAA,oBAGA,OAIhBC,UAAY,WACR,GAA+B,OAA3BN,EAAKC,MAAMC,EAAEI,UACb,MAAQ,OAIhBC,YAAc,WACVP,EAAKC,MAAMO,WAAWR,EAAKC,MAAMC,4EAKjC,IAAIO,EAAOC,KAAKT,MAAMC,EAAEO,KAAKE,MAAM,KAG/BC,EADO,IAAIC,KAAKH,KAAKT,MAAMC,EAAEY,cACZC,qBAErB,OACIZ,EAAAC,EAAAC,cAAA,MAAIW,UAAU,YAAYC,QAASP,KAAKH,aACpCJ,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAOP,EAAK,IAC1BN,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAOP,EAAK,IAC1BN,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAON,KAAKT,MAAMC,EAAEgB,SAClCf,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAOJ,GACrBT,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAON,KAAKT,MAAMC,EAAEI,UAAWI,KAAKJ,aAClDH,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAON,KAAKX,QAC1BI,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAON,KAAKT,MAAMC,EAAEiB,eApC/BC,cCwDJC,qBAvDX,SAAAA,EAAYpB,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAZ,KAAAW,IACfrB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAhB,KAAMT,KASV0B,WAAa,SAACC,GACV5B,EAAK6B,SAAS,CACVpB,KAAMmB,EAAME,OAAOC,SAZR/B,EAgBnBgC,cAAgB,SAACJ,GACb5B,EAAK6B,SAAS,CACVI,QAASL,EAAME,OAAOC,SAlBX/B,EAsBnBkC,cAAgB,SAACN,GACb5B,EAAK6B,SAAS,CACVX,QAASU,EAAME,OAAOC,SAxBX/B,EA4BnBmC,YAAc,WACVnC,EAAKC,MAAMO,WAAW,OA7BPR,EAgCvBoC,OAAS,WACL,IAAI3B,EAAMT,EAAKqC,MAAM5B,KACjBwB,EAAUjC,EAAKqC,MAAMJ,QACrBf,EAAUlB,EAAKqC,MAAMnB,QACrBoB,EAAKtC,EAAKC,MAAMsC,KAAKC,IACzBxC,EAAKC,MAAMmC,OAAOE,EAAI7B,EAAMwB,EAASf,IAnCjClB,EAAKqC,MAAQ,CACT5B,KAAMR,EAAMsC,KAAK9B,KAAKE,MAAM,KAAK,GACjCsB,QAAShC,EAAMsC,KAAK9B,KAAKE,MAAM,KAAK,GACpCO,QAASjB,EAAMsC,KAAKrB,SALTlB,wEAwCf,OACIG,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBACXb,EAAAC,EAAAC,cAAA,UAAQW,UAAU,oBAAoBC,QAASP,KAAKyB,aAApD,KACAhC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,YAAf,SAAgCb,EAAAC,EAAAC,cAAA,SAAOW,UAAU,cAAcyB,KAAK,OAAOV,MAAOrB,KAAK2B,MAAM5B,KAAMiC,SAAUhC,KAAKiB,cAClHxB,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WAClBF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eAAf,YAAsCb,EAAAC,EAAAC,cAAA,SAAOW,UAAU,iBAAiByB,KAAK,OAAOV,MAAOrB,KAAK2B,MAAMJ,QAASS,SAAUhC,KAAKsB,iBAC9H7B,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WAClBF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eAAf,WAAqCb,EAAAC,EAAAC,cAAA,SAAOW,UAAU,iBAAiByB,KAAK,OAAOV,MAAOrB,KAAK2B,MAAMnB,QAASwB,SAAUhC,KAAKwB,iBAC7H/B,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,UAAQW,UAAU,gBAAgBC,QAASP,KAAK0B,QAAhD,kBAlDKhB,+BC6FNuB,cA1FX,SAAAA,IAAc,IAAA3C,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAZ,KAAAiC,IACV3C,EAAAsB,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAqB,GAAAjB,KAAAhB,QAQJkC,kBATctB,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAA1C,EAAA2C,KASM,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAA1C,EAAA8C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIC,IAAMC,IAAI,YADd,OACZN,EADYE,EAAAK,KAGhBxD,EAAK6B,SAAS,CACV4B,MAAOR,EAAQS,OAJH,wBAAAP,EAAAQ,SAAAX,EAAAtC,SATNV,EAiBd4D,WAAa,SAAChC,GACV5B,EAAK6B,SAAS,CACVgC,KAAMjC,EAAME,OAAOC,SAnBb/B,EAuBd8D,aAAe,SAAClC,GACZ5B,EAAK6B,SAAS,CACVkC,WAAYnC,EAAME,OAAOC,SAzBnB/B,EA6BdQ,WAAa,SAAC+B,GACVvC,EAAK6B,SAAS,CACVmC,UAAWzB,KA/BLvC,EAmCdoC,OAAS,SAACE,EAAI7B,EAAMwB,EAASf,GAC3B,IAAIuC,EAAQzD,EAAKqC,MAAMoB,MAAMQ,IAAI,SAAA/D,GAK7B,OAJGA,EAAEsC,MAAQF,IACVpC,EAAEO,KAAOA,EAAO,IAAMwB,EACtB/B,EAAEgB,QAAUA,GAERhB,IAGbF,EAAK6B,SAAS,CACV4B,MAAOA,KA3CPzD,EAAKqC,MAAQ,CACToB,MAAO,GACPI,KAAM,GACNE,WAAY,OACZC,UAAW,MANLhE,wEAiDL,IAAAkE,EAAAxD,KACL,OACIP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACXb,EAAAC,EAAAC,cAAA,SAAOW,UAAU,eAAeyB,KAAK,OAAO0B,YAAY,SAASpC,MAAOrB,KAAK2B,MAAMwB,KAAMnB,SAAUhC,KAAKkD,aACxGzD,EAAAC,EAAAC,cAAA,UAAQW,UAAU,UAAUe,MAAOrB,KAAK2B,MAAM0B,WAAYrB,SAAUhC,KAAKoD,cACrE3D,EAAAC,EAAAC,cAAA,UAAQ0B,MAAM,QAAd,QACA5B,EAAAC,EAAAC,cAAA,UAAQ0B,MAAM,WAAd,WACA5B,EAAAC,EAAAC,cAAA,UAAQ0B,MAAM,aAAd,SACA5B,EAAAC,EAAAC,cAAA,UAAQ0B,MAAM,QAAd,QACA5B,EAAAC,EAAAC,cAAA,UAAQ0B,MAAM,SAAd,UAEJ5B,EAAAC,EAAAC,cAAA,WACKK,KAAK2B,MAAM2B,UACR7D,EAAAC,EAAAC,cAAC+D,EAAD,CAAQ5D,WAAYE,KAAKF,WAAY+B,KAAM7B,KAAK2B,MAAM2B,UAAW5B,OAAQ1B,KAAK0B,SAC5E,MAEVjC,EAAAC,EAAAC,cAAA,SAAOW,UAAU,SAAQb,EAAAC,EAAAC,cAAA,aACrBF,EAAAC,EAAAC,cAAA,MAAIW,UAAU,QACVb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAd,QACAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAd,WACAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAd,WACAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAd,iBACAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAd,SACAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAd,QACAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,OAAd,UAEHN,KAAK2B,MAAMoB,MAAMQ,IAAI,SAAA/D,GAClB,IAAKA,EAAEgE,EAAK7B,MAAM0B,aAAe,IAAIM,cAAcC,SAASJ,EAAK7B,MAAMwB,KAAKQ,eACxE,OACIlE,EAAAC,EAAAC,cAACkE,EAAD,CAAMC,IAAKtE,EAAEsC,IAAKtC,EAAGA,EAAGM,WAAY0D,EAAK1D,yBA/EnDY,aC6BPqD,qBA/BX,SAAAA,IAAa,IAAAzE,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAZ,KAAA+D,IACTzE,EAAAsB,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAmD,GAAA/C,KAAAhB,QAGJkD,WAAa,SAAChC,GACN5B,EAAKC,MAAMyE,OAAO9C,EAAME,OAAOC,QAL1B/B,wEAWD,OACIG,EAAAC,EAAAC,cAAA,sBACgBF,EAAAC,EAAAC,cAAA,SAAOsE,KAAK,aAAa3D,UAAU,eAAeyB,KAAK,OAAO0B,YAAY,cAAcpC,MAAOrB,KAAKT,MAAM4D,KAAMnB,SAAUhC,KAAKkD,aACvIzD,EAAAC,EAAAC,cAAA,YAAUiC,GAAG,cACZ5B,KAAKT,MAAMwD,MAAMQ,IAAI,SAAA/D,GAClB,OACAC,EAAAC,EAAAC,cAAA,UAAQ0B,MAAO7B,EAAEO,kBAlBvBW,cCsDXwD,cApDX,SAAAA,IAAa,IAAA5E,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAZ,KAAAkE,IACT5E,EAAAsB,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAsD,GAAAlD,KAAAhB,QAMJkD,WAAa,SAAChC,GACN5B,EAAKC,MAAM4E,SAASjD,EAAME,OAAOC,QAR5B/B,EAWb8E,gBAAiB,SAAClD,GACV5B,EAAKC,MAAMK,UAAUsB,EAAME,OAAOC,QAVtC/B,EAAKqC,MAAO,CACR0C,UAAW,IAHN/E,wEAgBT,OACIG,EAAAC,EAAAC,cAAA,mCAEIF,EAAAC,EAAAC,cAAA,UAAQ0B,MAAOrB,KAAKT,MAAM4D,KAAMnB,SAAUhC,KAAKkD,WAAY5C,UAAU,UACjEb,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,iCAEJF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,WAAWC,QAASP,KAAKT,MAAM+E,cAA9C,YACA7E,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WAdb,cAkBIF,EAAAC,EAAAC,cAAA,UAAQW,UAAU,aAAae,MAAOrB,KAAKT,MAAM8E,UAAWrC,SAAUhC,KAAKoE,iBACvE3E,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OAAOC,QAASP,KAAKT,MAAMgF,UAA1C,QACA9E,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WA1Bb,gBA4BYF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UAAUC,QAASP,KAAKT,MAAMiF,aAA7C,mBA9CE9D,aCwDX+D,cAvDX,SAAAA,EAAYlF,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAZ,KAAAyE,IACfnF,EAAAsB,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAA6D,GAAAzD,KAAAhB,KAAMT,KAQVmF,eAAiB,SAACxD,GACd5B,EAAK6B,SAAS,CACVwD,SAAUzD,EAAME,OAAOC,SAXZ/B,EAenBsF,kBAAoB,SAAC1D,GACjB5B,EAAK6B,SAAS,CACV0D,YAAa3D,EAAME,OAAOC,SAjBf/B,EAqBnBwF,kBAAoB,SAAC5D,GACjB5B,EAAK6B,SAAS,CACV4D,YAAa7D,EAAME,OAAOC,SAvBf/B,EA2BnB0F,gBAAkB,SAAC9D,GACf5B,EAAK6B,SAAS,CACV8D,UAAW/D,EAAME,OAAOC,SA7Bb/B,EAiCnB4F,SAAW,WACP5F,EAAKC,MAAM2F,SAAS5F,EAAKqC,QAhCzBrC,EAAKqC,MAAQ,CACTgD,SAAU,GACVE,YAAa,GACbE,YAAa,GACbE,UAAW,IANA3F,wEAsCf,OACIG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIW,UAAU,cAAd,cADJ,eAEgBb,EAAAC,EAAAC,cAAA,SAAOW,UAAU,aAAayB,KAAK,OAAOV,MAAOrB,KAAK2B,MAAMwB,KAAMnB,SAAUhC,KAAK0E,iBAC7FjF,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WAHb,YAIaF,EAAAC,EAAAC,cAAA,SAAOW,UAAU,UAAUyB,KAAK,OAAOV,MAAOrB,KAAK2B,MAAMkD,YAAa7C,SAAUhC,KAAK4E,oBAC9FnF,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WALb,YAMaF,EAAAC,EAAAC,cAAA,SAAOW,UAAU,UAAUyB,KAAK,OAAOV,MAAOrB,KAAK2B,MAAMoD,YAAa/C,SAAUhC,KAAK8E,oBAC9FrF,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WAPb,WAQYF,EAAAC,EAAAC,cAAA,SAAOW,UAAU,QAAQyB,KAAK,OAAOV,MAAOrB,KAAK2B,MAAMsD,UAAWjD,SAAUhC,KAAKgF,kBACzFvF,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,UAAQW,UAAU,eAAeC,QAASP,KAAKkF,UAA/C,0BAlDOxE,aC+FRyE,cA3FX,SAAAA,IAAc,IAAA7F,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAZ,KAAAmF,IACV7F,EAAAsB,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAuE,GAAAnE,KAAAhB,QAUJoF,WAAa,WAET,OADmB9F,EAAKqC,MAAMoB,MAAMsC,KAAK,SAAA7F,GAAC,OAAIA,EAAEO,OAAST,EAAKqC,MAAMqC,UAZ1D1E,EAgBd0E,OAAS,SAAC3C,GACN/B,EAAK6B,SAAS,CACV6C,OAAQ3C,KAlBF/B,EAsBdmB,MAAQ,SAACY,GACL/B,EAAK6B,SAAS,CACVV,MAAOY,KAxBD/B,EA4Bd4C,kBA5BctB,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAA1C,EAAA2C,KA4BM,SAAAC,IAAA,IAAAgD,EAAA,OAAAlD,EAAA1C,EAAA8C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIC,IAAMC,IAAI,YADd,OACZyC,EADY7C,EAAAK,KAEhBxD,EAAK6B,SAAS,CACV4B,MAAOuC,EAAQtC,OAHH,wBAAAP,EAAAQ,SAAAX,EAAAtC,SA5BNV,EAmCdiG,WAAa,SAACvB,GAET,IAAIwB,EAAclG,EAAKqC,MAAMoB,MAAMQ,IAAI,SAAC/D,GACpC,OAAGA,EAAEoC,KAAOoC,EAAOpC,GACRoC,EAEJxE,IAEXF,EAAK6B,SAAS,CAAC4B,MAAMyC,KA3CZlG,EA8CdgF,aAAe,WACX,IAAImB,EAASnG,EAAK8F,aAClBxC,IAAM8C,KAAK,YAAcD,EAAO3D,IAAK,CAAErB,MAAOnB,EAAKqC,MAAMlB,QACxDkF,KAAKrG,EAAKiG,aAjDDjG,EAoDdM,UAAY,SAACyB,GACT/B,EAAK6B,SAAS,CACVvB,UAAWyB,KAtDL/B,EA0DdiF,SAAW,WACP,IAAIqB,EAActG,EAAK8F,aACvBxC,IAAM8C,KAAK,iBAAmBE,EAAY9D,IAAK,CAAElC,UAAWN,EAAKqC,MAAM/B,YACtE+F,KAAKrG,EAAKiG,aA7DDjG,EAgEdkF,YAAc,WACV,IAAIqB,EAAoBvG,EAAK8F,aAC7BxC,IAAM8C,KAAK,gBAAkBG,EAAkB/D,IAAK,CAAEzC,KAAMC,EAAKqC,MAAMtC,OACtEsG,KAAKrG,EAAKiG,aAnEDjG,EAsEd4F,SAtEc,eAAAY,EAAAlF,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAA1C,EAAA2C,KAsEH,SAAA0D,EAAOC,GAAP,IAAAC,EAAA,OAAA7D,EAAA1C,EAAA8C,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cACHsD,EAAY,CAAClG,KAAMiG,EAAOrB,SAAW,IAAMqB,EAAOnB,YAAarE,QAASwF,EAAOjB,YAAatE,MAAOuF,EAAOf,WADvGiB,EAAAvD,KAAA,EAEGC,IAAM8C,KAAK,cAAeO,GAF7B,wBAAAC,EAAAjD,SAAA8C,EAAA/F,SAtEG,gBAAAmG,GAAA,OAAAL,EAAAM,MAAApG,KAAAqG,YAAA,GAEV/G,EAAKqC,MAAQ,CACToB,MAAO,GACPiB,OAAQ,GACRvD,MAAO,GACPb,UAAW,GACXP,MAAM,GAPAC,wEA4EV,OACIG,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACXb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,UAAd,UACAb,EAAAC,EAAAC,cAAC2G,EAAD,CAAanD,KAAMnD,KAAK2B,MAAMqC,OAAQjB,MAAO/C,KAAK2B,MAAMoB,MAAOiB,OAAQhE,KAAKgE,SAC5EvE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4G,EAAD,CAAajC,aAActE,KAAKsE,aAAcD,UAAWrE,KAAK2B,MAAM/B,UAAWuD,KAAMnD,KAAK2B,MAAMlB,MAAO0D,SAAUnE,KAAKS,MAAOb,UAAWI,KAAKJ,UAAWP,KAAMW,KAAKX,KAAMkF,SAAUvE,KAAKuE,SAAUC,YAAaxE,KAAKwE,cACpN/E,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACuF,EAAD,CAAUA,SAAUlF,KAAKkF,mBArFnBxE,4CCDtB8F,IAAQC,IAAIC,SA2BGC,6MAvBXvG,aAAe,SAAC2C,GACZ,OAAOA,EAAM6D,OAAO,SAAApH,GAEhB,OAAQ,IAAIW,KAAKX,EAAEY,cAAcyG,cAAe,IAAI1G,MAAO0G,YAAc,IAAI1G,KAAKX,EAAEY,cAAc0G,iBAAkB,IAAI3G,MAAO2G,gBAChIC,gFAKH,IAAIhE,EAAQ/C,KAAKT,MAAMwD,MAIvB,OACItD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAiB1G,UAAU,iBAAiB2G,KAAK,aAAaC,KAAK,KAAKC,MAAM,QAAQC,MAAO,CAAEC,gBAAiB,mBAAoBC,QAAS,OAAQC,aAAc,SACnK9H,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBAAgBN,KAAKI,aAAa2C,IACjDtD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cAAf,QAAiC,IAAIH,MAAOqH,eAAe,QAAS,CAACC,MAAO,SAA5E,oBAnBS/G,aCFzB8F,IAAQC,IAAIiB,SAyBGC,6MArBX/H,UAAY,SAACmD,GAGT,OAFYA,EAAM6D,OAAO,SAAApH,GAAM,OAAuB,MAAfA,EAAEI,YAE5BmH,gFAIb,IAAIhE,EAAM/C,KAAKT,MAAMwD,MACrB,OACItD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAiB1G,UAAU,YAAY2G,KAAK,WAAWC,KAAK,KAAKC,MAAM,QAAQC,MAAO,CAACC,gBAAiB,mBAAoBC,QAAS,OAAQC,aAAc,SAC3J9H,EAAAC,EAAAC,cAAA,OAAKW,UAAU,SACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aAAaN,KAAKJ,UAAUmD,IAC3CtD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cAAf,wBAfaI,aCFzB8F,IAAQC,IAAImB,SAqBGC,6MAjBXxI,KAAO,SAAC0D,GAEJ,OADWA,EAAM6D,OAAO,SAAApH,GAAM,OAAkB,IAAXA,EAAEH,OAC3B0H,gFAIZ,IAAIhE,EAAQ/C,KAAKT,MAAMwD,MACvB,OACItD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAiB1G,UAAU,WAAW2G,KAAK,cAAcC,KAAK,KAAKC,MAAM,QAAQC,MAAO,CAACC,gBAAiB,mBAAoBC,QAAS,OAAQC,aAAc,SAC7J9H,EAAAC,EAAAC,cAAA,OAAKW,UAAU,QAAQN,KAAKX,KAAK0D,IACjCtD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cAAf,+BAbqBI,aCFjC8F,IAAQC,IAAIqB,SAkCGC,6MA/BXvH,QAAU,WACN,IAAIwH,EAAY,GADJC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEZ,QAAAC,EAAAC,EAAchJ,EAAKC,MAAMwD,MAAzBwF,OAAAC,cAAAP,GAAAI,EAAAC,EAAA3F,QAAA8F,MAAAR,GAAA,EAAgC,KAAvBS,EAAuBL,EAAAhH,MACxB2G,EAAUU,EAAElI,SACZwH,EAAUU,EAAElI,WAEZwH,EAAUU,EAAElI,SAAW,GANnB,MAAAmI,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAK,EAAAM,QAAAN,EAAAM,SAAA,WAAAV,EAAA,MAAAC,GAWZ,IAFA,IAAIU,EAAiB,CAAC9I,KAAM,GAAI+I,MAAO,GACnCC,EAAOnI,OAAOmI,KAAKf,GACvBgB,EAAA,EAAAA,EAAcD,EAAdhC,OAAAiC,IAAoB,CAAf,IAAIN,EAAKK,EAAJC,GACHhB,EAAUU,GAAGG,EAAeC,QAC3BD,EAAiB,CAAC9I,KAAM2I,EAAGI,MAAOd,EAAUU,KAGpD,OAAOG,EAAe9I,8EAItB,OACIN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAiB1G,UAAU,YAAY2G,KAAK,iBAAiBC,KAAK,KAAKC,MAAM,QAAQC,MAAO,CAAEC,gBAAiB,mBAAoBC,QAAS,OAAQC,aAAc,SAClK9H,EAAAC,EAAAC,cAAA,QAAMW,UAAU,eAAeN,KAAKQ,WACpCf,EAAAC,EAAAC,cAAA,OAAKW,UAAU,YAAf,2BAzBaI,aC6BduI,cA3BX,SAAAA,IAAc,IAAA3J,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAZ,KAAAiJ,IACV3J,EAAAsB,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAqI,GAAAjI,KAAAhB,QAKJkC,kBANctB,OAAAuB,EAAA,EAAAvB,CAAAwB,EAAA1C,EAAA2C,KAMM,SAAAC,IAAA,IAAA4G,EAAA,OAAA9G,EAAA1C,EAAA8C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMC,IAAMC,IAAI,cADhB,OACZqG,EADYzG,EAAAK,KAEhBxD,EAAK6B,SAAS,CACV4B,MAAOmG,EAAUlG,OAHL,wBAAAP,EAAAQ,SAAAX,EAAAtC,SAJhBV,EAAKqC,MAAQ,CACToB,MAAO,IAHDzD,wEAgBV,OACIG,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAACwJ,EAAD,CAAYpG,MAAO/C,KAAK2B,MAAMoB,QAC9BtD,EAAAC,EAAAC,cAACyJ,EAAD,CAAYrG,MAAO/C,KAAK2B,MAAMoB,QAC9BtD,EAAAC,EAAAC,cAAC0J,EAAD,CAAoBtG,MAAO/C,KAAK2B,MAAMoB,QACtCtD,EAAAC,EAAAC,cAACkJ,EAAD,CAAgB9F,MAAO/C,KAAK2B,MAAMoB,gBAtBtBrC,aCmBT4I,mLAnBX,OACE7J,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iBACbb,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,KACE9J,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,cACZb,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAMC,GAAG,YAAT,YACJhK,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAMC,GAAG,YAAT,YACJhK,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAMC,GAAG,cAAT,eAENhK,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAK,EAACC,OAAQ,kBAAMpK,EAAAC,EAAAC,cAACmK,EAAD,SAC3CrK,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAK,EAACC,OAAQ,kBAAKpK,EAAAC,EAAAC,cAACoK,EAAD,SAC1CtK,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,OAAQ,kBAAKpK,EAAAC,EAAAC,cAACqK,EAAD,mBAbtCtJ,aCKEuJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAST,OAAOpK,EAAAC,EAAAC,cAAC4K,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjF,KAAK,SAAAkF,GACjCA,EAAaC","file":"static/js/main.67ad0ab0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../../styles/user.css'\r\n\r\n\r\nclass User extends Component {\r\n   \r\n    sold = () => {//פונקציה שאומרת אם המוכר מכר הרבה אז יוצג וי, אחרת יוצג קו\r\n        if (this.props.u.sold) {\r\n            return (<p> &#10004;</p>)\r\n        }\r\n        else {\r\n            return (\"-\")\r\n        }\r\n    }\r\n\r\n    emailType = () => { //פונקציה שאומרת אם האימל = לריק אז זה יציג קו\r\n        if (this.props.u.emailType === null) {\r\n            return (\"-\")\r\n        }\r\n    }\r\n\r\n    togglePopup = () => { \r\n        this.props.closePopUp(this.props.u)\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.u)\r\n        let name = this.props.u.name.split(' ') // מציג את השם בעמודה לבד, ואת שם המשפחה בעמודה לבד\r\n        // console.log(this.props.u.firstContact)\r\n        let date = new Date(this.props.u.firstContact) //מציג רק את התאריך,בלי שעה ומיקום\r\n        let firstDate = date.toLocaleDateString()\r\n\r\n        return (\r\n            <tr className=\"row-first\" onClick={this.togglePopup}>\r\n                <td className=\"row\">{name[0]}</td>\r\n                <td className=\"row\">{name[1]}</td>\r\n                <td className=\"row\">{this.props.u.country}</td>\r\n                <td className=\"row\">{firstDate}</td>\r\n                <td className=\"row\">{this.props.u.emailType}{this.emailType()}</td>\r\n                <td className=\"row\">{this.sold()}</td>\r\n                <td className=\"row\">{this.props.u.owner}</td>\r\n            </tr>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport '../../styles/update.css'\r\n\r\n\r\nclass Update extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: props.user.name.split(\" \")[0],\r\n            surname: props.user.name.split(\" \")[1],\r\n            country: props.user.country,\r\n            // id: props.user.id\r\n        }\r\n    }\r\n\r\n    updateUser = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n    }\r\n\r\n    updateSurname = (event) => {\r\n        this.setState({\r\n            surname: event.target.value\r\n        })\r\n    }\r\n\r\n    updateCountry = (event) => {\r\n        this.setState({\r\n            country: event.target.value\r\n        })\r\n    }\r\n\r\n    closeButton = () => {\r\n        this.props.closePopUp(null)\r\n    }\r\n\r\nupdate = () => {\r\n    let name= this.state.name\r\n    let surname = this.state.surname\r\n    let country = this.state.country\r\n    let id = this.props.user._id \r\n    this.props.update(id, name, surname, country)\r\n}\r\n    render() {\r\n        return (\r\n            <div className=\"update-class\">\r\n                <button className=\"button-closePopup\" onClick={this.closeButton}>X</button>\r\n                <div className=\"name-div\">Name: <input className=\"name-update\" type=\"text\" value={this.state.name} onChange={this.updateUser}></input></div>\r\n                <br></br><br></br><br></br>\r\n                <div className=\"surname-div\">Surname: <input className=\"surname-update\" type=\"text\" value={this.state.surname} onChange={this.updateSurname}></input></div>\r\n                <br></br><br></br><br></br>\r\n                <div className=\"country-div\">Country:<input className=\"country-update\" type=\"text\" value={this.state.country} onChange={this.updateCountry}></input></div>\r\n                <br></br><br></br>\r\n                <button className=\"button-update\" onClick={this.update}>UPDATE</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Update;","import React, { Component } from 'react';\r\nimport '../styles/clients.css'\r\nimport User from './clients/user'\r\nimport Update from './clients/update'\r\nimport axios from 'axios'\r\n\r\nclass Clients extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            users: [],\r\n            text: \"\",\r\n            textOption: \"name\",\r\n            showPopup: null\r\n        }\r\n    }\r\n    componentDidMount = async() => {\r\n        let clients = await axios.get(\"/clients\")\r\n        // console.log(clients)\r\n        this.setState({\r\n            users: clients.data //אקסיוס מגיש אובייקט אבל אנחנו רוצים מערך\r\n        })\r\n    }\r\n    \r\n    updateText = (event) => {\r\n        this.setState({\r\n            text: event.target.value\r\n        })\r\n    }\r\n\r\n    updateOption = (event) => {\r\n        this.setState({\r\n            textOption: event.target.value\r\n        })\r\n    }\r\n\r\n    closePopUp = (user) => { //פונקציה שמשנה את הסטייט, במקום להציג פופ-אפ זה משנה לשם המשתמש\r\n        this.setState({\r\n            showPopup: user\r\n        });\r\n    }\r\n\r\n    update = (id, name, surname, country) => {\r\n      let users = this.state.users.map(u =>{\r\n          if(u._id === id) {\r\n             u.name = name + \" \" + surname;\r\n             u.country = country;\r\n          }\r\n          return u;\r\n        \r\n    })\r\n    this.setState({\r\n        users: users\r\n    })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <input className=\"search-input\" type=\"text\" placeholder=\"Search\" value={this.state.text} onChange={this.updateText} />\r\n                <select className=\"options\" value={this.state.textOption} onChange={this.updateOption}>\r\n                    <option value=\"name\">Name</option>\r\n                    <option value=\"country\">Country</option>\r\n                    <option value=\"emailType\">Email</option>\r\n                    <option value=\"sold\">Sold</option>\r\n                    <option value=\"owner\">Owner</option>\r\n                </select>\r\n                <div>\r\n                    {this.state.showPopup ?\r\n                        <Update closePopUp={this.closePopUp} user={this.state.showPopup} update={this.update}  />\r\n                        : null}\r\n                </div>\r\n                <table className=\"col-1\"><tbody>\r\n                    <tr className=\"main\">\r\n                        <td className=\"nav\">Name</td>\r\n                        <td className=\"nav\">Surname</td>\r\n                        <td className=\"nav\">Country</td>\r\n                        <td className=\"nav\">First Contact</td>\r\n                        <td className=\"nav\">Email</td>\r\n                        <td className=\"nav\">Sold</td>\r\n                        <td className=\"nav\">Owner</td>\r\n                    </tr>\r\n                    {this.state.users.map(u => {\r\n                        if ((u[this.state.textOption] || \"\").toLowerCase().includes(this.state.text.toLowerCase())) {\r\n                            return (\r\n                                <User key={u._id} u={u} closePopUp={this.closePopUp} />\r\n                            )\r\n\r\n                        }\r\n                    })}\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clients;","import React, { Component } from 'react';\r\nimport '../../styles/actions.css'\r\n\r\nclass InputClient extends Component {\r\n    constructor(){\r\n        super() \r\n    }\r\n\r\n    updateText = (event) => {\r\n            this.props.client(event.target.value) \r\n    }\r\n\r\n\r\n    render() {\r\n        // console.log(this)\r\n                return (\r\n                    <div>\r\n                            Client: <input list=\"clientName\" className=\"input-client\" type=\"text\" placeholder=\"Client Name\" value={this.props.text} onChange={this.updateText} ></input>\r\n                            <datalist id=\"clientName\">\r\n                            {this.props.users.map(u =>{\r\n                                return (\r\n                                <option value={u.name}></option>\r\n                                )\r\n                            }\r\n                            )}\r\n                            </datalist>\r\n                    </div>\r\n                    \r\n                )\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\nexport default InputClient;\r\n\r\n\r\n\r\n//     inputChange = (event) => {\r\n//     this.setState({\r\n//         users: event.target.value\r\n\r\n//     })\r\n// }\r\n// value={this.props.users} onChange={this.inputChange}","import React, { Component } from 'react';\r\nimport '../../styles/actions.css'\r\n\r\n\r\nclass InputUpdate extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            textEmail: \"\"\r\n        }\r\n    }\r\n\r\n    updateText = (event) => { //פונקציה שמשנה את הסטייט, ולאחר מכן לוקחת את הבעלים מהאבא\r\n            this.props.setOwner(event.target.value)\r\n    }\r\n\r\n    updateEmailText =(event) => {\r\n            this.props.emailType(event.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            Transfer ownership to\r\n                <select value={this.props.text} onChange={this.updateText} className=\"option\">\r\n                    <option>Owner</option>\r\n                    <option>Emily Durham</option>\r\n                    <option>Janice Alvarado</option>\r\n                    <option >Leila Howe</option>\r\n                    <option >Hull Conrad</option>\r\n                    <option >Martin Massey</option>\r\n                    <option >Shepherd Stone</option>\r\n                    <option >Barton Ramirez</option>\r\n                    <option >Shepherd Stone</option>\r\n                </select>\r\n                <div className=\"transfer\" onClick={this.props.transferLink}>TRANSFER</div>\r\n                <br></br><br></br>\r\n\r\n\r\n                Send email:\r\n                <select className=\"send-email\" value={this.props.textEmail} onChange={this.updateEmailText}>\r\n                    <option>Email Type</option>\r\n                    <option>A</option>\r\n                    <option>B</option>\r\n                    <option>C</option>\r\n                    <option>D</option>\r\n                </select>\r\n                <div className=\"send\" onClick={this.props.sendLink}>SEND</div>\r\n                <br></br><br></br>\r\n                Declare sale!\r\n                        <div className=\"declare\" onClick={this.props.declareLink}>DECLARE</div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputUpdate;\r\n\r\n","import React, { Component } from 'react';\r\nimport '../../styles/actions.css'\r\n\r\n\r\nclass InputAdd extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            textName: \"\",\r\n            textSurname: \"\",\r\n            textCountry: \"\",\r\n            textOwner: \"\",\r\n        }\r\n    }\r\n    updateNameText = (event) => {\r\n        this.setState({\r\n            textName: event.target.value\r\n        })\r\n    }\r\n\r\n    updateSurnameText = (event) => {\r\n        this.setState({\r\n            textSurname: event.target.value\r\n        })\r\n    }\r\n\r\n    updateCountryText = (event) => {\r\n        this.setState({\r\n            textCountry: event.target.value\r\n        })\r\n    }\r\n\r\n    updateOwnerText = (event) => {\r\n        this.setState({\r\n            textOwner: event.target.value\r\n        })\r\n    }\r\n\r\n    inputAdd = () => {\r\n        this.props.inputAdd(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"add-client\">ADD CLIENT</h3>\r\n                First name: <input className=\"first-name\" type=\"text\" value={this.state.text} onChange={this.updateNameText}></input>\r\n                <br></br><br></br>\r\n                Surname: <input className=\"surname\" type=\"text\" value={this.state.textSurname} onChange={this.updateSurnameText}></input>\r\n                <br></br><br></br>\r\n                Country: <input className=\"country\" type=\"text\" value={this.state.textCountry} onChange={this.updateCountryText}></input>\r\n                <br></br><br></br>\r\n                Owner:  <input className=\"owner\" type=\"text\" value={this.state.textOwner} onChange={this.updateOwnerText}></input>\r\n                <br></br><br></br>\r\n                <button className=\"addNewClient\" onClick={this.inputAdd}>Add New Client</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputAdd;\r\n\r\n","import React, { Component } from 'react';\r\nimport '../styles/actions.css'\r\nimport InputClient from './actions/inputClient.js'\r\nimport InputUpdate from './actions/inputUpdate.js'\r\nimport InputAdd from './actions/inputAdd.js'\r\nimport axios from 'axios'\r\n\r\nclass Actions extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            users: [],\r\n            client: \"\",\r\n            owner: \"\",\r\n            emailType: \"\",\r\n            sold: true\r\n        }\r\n    }\r\n\r\n    findClient = () => {\r\n        let wantedClient = this.state.users.find(u => u.name === this.state.client) //פונקציה שמוצאת את השם של הלקוח\r\n        return (wantedClient) //מחזירה את הפונקציה בעזרת שם האובייקט\r\n    }\r\n\r\n    client = (value) => {\r\n        this.setState({\r\n            client: value\r\n        })\r\n    }\r\n\r\n    owner = (value) => {\r\n        this.setState({\r\n            owner: value\r\n        })\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let actions = await axios.get(\"/actions\")\r\n        this.setState({\r\n            users: actions.data //  אקסיוס מגיש אובייקט אבל אנחנו רוצים מערך לכן נעשה .דטה כדי להכנס לתוך המערך\r\n        })\r\n    }\r\n\r\n    setClients = (client) => {\r\n        //this.setState// מציאת הלקוח במקום של הבעלים - change state - notic copy references\r\n         let copiedArray = this.state.users.map((u)=>{\r\n             if(u.id === client.id){\r\n                 return client;\r\n             }\r\n             return u;\r\n         });\r\n         this.setState({users:copiedArray});\r\n        };\r\n\r\n    transferLink = () => {\r\n        let wanted = this.findClient(); //מציאת הלקוח\r\n        axios.post('/clients/' + wanted._id, { owner: this.state.owner })\r\n        .then(this.setClients)\r\n    }\r\n\r\n    emailType = (value) => {\r\n        this.setState({\r\n            emailType: value\r\n        })\r\n    }\r\n\r\n    sendLink = () => {\r\n        let wantedEmail = this.findClient(); //מציאת הלקוח בעזרת הפונקציה\r\n        axios.post('/clientsEmail/' + wantedEmail._id, { emailType: this.state.emailType })\r\n        .then(this.setClients)\r\n    }\r\n\r\n    declareLink = () => {\r\n        let wantedClientsSold = this.findClient();\r\n        axios.post('/clientsSold/' + wantedClientsSold._id, { sold: this.state.sold })\r\n        .then(this.setClients)\r\n    }\r\n\r\n    inputAdd = async (inputs) => {\r\n        let addClient = {name: inputs.textName + \" \" + inputs.textSurname, country: inputs.textCountry, owner: inputs.textOwner}\r\n            await axios.post('/clientsAdd', addClient)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"action\">\r\n                <h3 className=\"update\">UPDATE</h3>\r\n                <InputClient text={this.state.client} users={this.state.users} client={this.client} />\r\n                <br></br>\r\n                <InputUpdate transferLink={this.transferLink} textEmail={this.state.emailType} text={this.state.owner} setOwner={this.owner} emailType={this.emailType} sold={this.sold} sendLink={this.sendLink} declareLink={this.declareLink} />\r\n                <br></br><br></br>\r\n                <hr></hr>\r\n                <InputAdd inputAdd={this.inputAdd}/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Actions;","import React, { Component } from 'react';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons'\r\nimport '../../styles/analytics.css'\r\n\r\nlibrary.add(faChartLine)\r\n\r\nclass NewClients extends Component {\r\n\r\n    firstContact = (users) => {\r\n        return users.filter(u => {\r\n            // console.log(u.firstContact) // //show all the date whit time.\r\n            return (new Date(u.firstContact).getMonth() === new Date().getMonth() && new Date(u.firstContact).getFullYear() === new Date().getFullYear() ) \r\n        }).length\r\n    }\r\n\r\n\r\n    render() {\r\n        let users = this.props.users\r\n\r\n        // let dateTime = new Date(yourString + \"Z\");\r\n\r\n        return (\r\n            <div>\r\n                <FontAwesomeIcon className=\"iconNewClients\" icon=\"chart-line\" size=\"4x\" color=\"white\" style={{ backgroundColor: \"rgb(61, 218, 61)\", padding: \"15px\", borderRadius: \"50%\" }} />\r\n                <div className=\"firstContact\">{this.firstContact(users)}</div>\r\n                <div className=\"newClients\">New {new Date().toLocaleString('en-us', {month: 'long'})} Clients</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewClients;\r\n","import React, { Component } from 'react';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport '../../styles/analytics.css'\r\n\r\nlibrary.add(faEnvelope)\r\n\r\nclass EmailsSent extends Component {\r\n\r\n    emailType = (users) =>{\r\n        let email = users.filter(u => {return( u.emailType != null)}) \r\n        // console.log(email)\r\n        return(email.length) \r\n    }\r\n\r\n    render() {\r\n        let users=this.props.users\r\n        return (\r\n            <div>\r\n            <FontAwesomeIcon className=\"iconEmail\" icon=\"envelope\" size=\"4x\" color=\"white\" style={{backgroundColor: \"rgb(3, 162, 202)\", padding: \"15px\", borderRadius: \"50%\"}}/>\r\n            <div className=\"email\">\r\n            <div className=\"emailType\">{this.emailType(users)}</div>\r\n            <div className=\"emailsSent\">Emails Sent</div>\r\n            </div>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default EmailsSent;\r\n\r\n","import React, { Component } from 'react';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport '../../styles/analytics.css'\r\n\r\nlibrary.add(faUserCircle)\r\n\r\nclass OutstandingClients extends Component {\r\n\r\n    sold = (users) =>{\r\n        let sold = users.filter(u => {return(u.sold === false)})\r\n        return(sold.length)\r\n    }\r\n    \r\n    render() {\r\n        let users = this.props.users\r\n        return (\r\n            <div>\r\n            <FontAwesomeIcon className=\"iconUser\" icon=\"user-circle\" size=\"4x\" color=\"white\" style={{backgroundColor: \"rgb(243, 45, 45)\", padding: \"15px\", borderRadius: \"50%\"}}/>\r\n            <div className=\"sold\">{this.sold(users)}</div>\r\n            <div className=\"soldClient\">Outstanding Clients</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OutstandingClients;\r\n\r\n","import React, { Component } from 'react';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGlobeAmericas } from '@fortawesome/free-solid-svg-icons'\r\nimport '../../styles/analytics.css'\r\n\r\nlibrary.add(faGlobeAmericas)\r\n\r\nclass HottestCountry extends Component {\r\n    country = () => {\r\n        let countries = {};\r\n        for (let i of this.props.users) { //יצרנו אובייקט שיש בו את המדינה כמילת מפתח\r\n            if (countries[i.country]) { //ובכל מדינה יש כמו מכירות\r\n                countries[i.country]++ //ספרנו את המכירות\r\n            } else {\r\n                countries[i.country] = 1;\r\n            }\r\n        }\r\n        let hottestCountry = {name: \"\", sales: 0};\r\n        let keys = Object.keys(countries); //חיפשנו איזה מדינה עם הכי הרבה מכירות\r\n        for (let i of keys) {\r\n            if(countries[i]>hottestCountry.sales) {\r\n                hottestCountry = {name: i, sales: countries[i]}\r\n            }\r\n        }\r\n        return hottestCountry.name;\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <FontAwesomeIcon className=\"iconGlobe\" icon=\"globe-americas\" size=\"4x\" color=\"white\" style={{ backgroundColor: \"rgb(230, 230, 7)\", padding: \"15px\", borderRadius: \"50%\" }} />\r\n                <span className=\"countrySale\">{this.country()}</span>\r\n                <div className=\"country1\">Hottest Country</div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default HottestCountry;\r\n\r\n","import React, { Component } from 'react';\r\nimport '../styles/analytics.css'\r\nimport NewClients from './badges/newClients'\r\nimport EmailsSent from './badges/emailsSent'\r\nimport OutstandingClients from './badges/outstandingClients'\r\nimport HottestCountry from './badges/hottestCountry'\r\nimport axios from 'axios'\r\n\r\n\r\nclass Analytics extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n    componentDidMount = async() => {\r\n        let analytics = await axios.get(\"/analytics\")\r\n        this.setState({\r\n            users: analytics.data \r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"badges\">\r\n            <NewClients users={this.state.users}/>\r\n            <EmailsSent users={this.state.users} />\r\n            <OutstandingClients users={this.state.users} />\r\n            <HottestCountry users={this.state.users}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Analytics;\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport Clients from \"./components/clients\"\nimport Actions from \"./components/actions\"\nimport Analytics from \"./components/analytics\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Router>\n          <div className=\"App\">\n            <ul className=\"main-links\">\n              <li><Link to=\"/Clients\">Clients</Link></li>\n              <li><Link to=\"/Actions\">Actions</Link></li>\n              <li><Link to=\"/Analytics\">Analytics</Link></li>\n            </ul>\n            <Route path=\"/clients\" exact render={() => <Clients/>} />\n            <Route path=\"/actions\" exact render={()=> <Actions />} />\n            <Route path=\"/analytics\" exact render={()=> <Analytics />} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}